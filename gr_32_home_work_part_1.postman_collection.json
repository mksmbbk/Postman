{
	"info": {
		"_postman_id": "681140cb-7366-4f11-a7aa-02556a508439",
		"name": "gr_32_home_work_part_1",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "17781577"
	},
	"item": [
		{
			"name": "hello endpoint request",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{ip_port}}/",
					"host": [
						"{{ip_port}}"
					],
					"path": [
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "EP_1_get_method",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{ip_port}}/get_method?name={{name}}&age={{age}}",
					"host": [
						"{{ip_port}}"
					],
					"path": [
						"get_method"
					],
					"query": [
						{
							"key": "name",
							"value": "{{name}}"
						},
						{
							"key": "age",
							"value": "{{age}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "EP_post_method",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "age",
							"value": "{{age}}",
							"type": "text"
						},
						{
							"key": "weight",
							"value": "78",
							"type": "text"
						},
						{
							"key": "name",
							"value": "{{name}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{ip_port}}/user_info_1",
					"host": [
						"{{ip_port}}"
					],
					"path": [
						"user_info_1"
					]
				}
			},
			"response": []
		},
		{
			"name": "EP_2_post_method",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "age",
							"value": "{{age}}",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "300",
							"type": "text"
						},
						{
							"key": "name",
							"value": "{{name}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{ip_port}}/user_info_3",
					"host": [
						"{{ip_port}}"
					],
					"path": [
						"user_info_3"
					]
				}
			},
			"response": []
		},
		{
			"name": "EP_3_object_info_1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{ip_port}}/object_info_1?name={{name}}&age={{age}}&weight={{weight}}",
					"host": [
						"{{ip_port}}"
					],
					"path": [
						"object_info_1"
					],
					"query": [
						{
							"key": "name",
							"value": "{{name}}"
						},
						{
							"key": "age",
							"value": "{{age}}"
						},
						{
							"key": "weight",
							"value": "{{weight}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "EP_4_object_info_2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{ip_port}}/object_info_2?name={{name}}&age={{age}}&salary={{salary}}",
					"host": [
						"{{ip_port}}"
					],
					"path": [
						"object_info_2"
					],
					"query": [
						{
							"key": "name",
							"value": "{{name}}"
						},
						{
							"key": "age",
							"value": "{{age}}"
						},
						{
							"key": "salary",
							"value": "{{salary}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "EP_5_object_info_3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{ip_port}}/object_info_3?name={{name}}&age={{age}}&salary=300",
					"host": [
						"{{ip_port}}"
					],
					"path": [
						"object_info_3"
					],
					"query": [
						{
							"key": "name",
							"value": "{{name}}"
						},
						{
							"key": "age",
							"value": "{{age}}"
						},
						{
							"key": "salary",
							"value": "300"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "EP_6_object_info_4",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{ip_port}}/object_info_4?name={{name}}&age={{age}}&salary=300",
					"host": [
						"{{ip_port}}"
					],
					"path": [
						"object_info_4"
					],
					"query": [
						{
							"key": "name",
							"value": "{{name}}"
						},
						{
							"key": "age",
							"value": "{{age}}"
						},
						{
							"key": "salary",
							"value": "300"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "EP_7_user_info_2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "{{name}}",
							"type": "text"
						},
						{
							"key": "age",
							"value": "{{age}}",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "300",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{ip_port}}/user_info_2",
					"host": [
						"{{ip_port}}"
					],
					"path": [
						"user_info_2"
					]
				}
			},
			"response": []
		},
		{
			"name": "object_info_3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"let resp_f = pm.response.json();\r",
							"console.log(resp_f)\r",
							"\r",
							"let req_f = pm.request.toJSON();\r",
							"console.log(req_f)\r",
							"\r",
							"let req_name = pm.request.url.query.one(\"name\")\r",
							"console.log(req_name)\r",
							"\r",
							"pm.test(\"Сравнение name\", function () {\r",
							"    pm.expect(req_name.value).to.eql(resp_f.name);\r",
							"});\r",
							"\r",
							"let req_age = pm.request.url.query.one(\"age\")\r",
							"console.log(req_age)\r",
							"\r",
							"pm.test(\"Сравнение age\", function () {\r",
							"    pm.expect(req_age.value).to.eql(resp_f.age);\r",
							"});\r",
							"\r",
							"let req_salary = pm.request.url.query.one(\"salary\")\r",
							"console.log(req_salary)\r",
							"\r",
							"pm.test(\"Сравнение salary\", function () {\r",
							"    pm.expect(+req_salary.value).to.eql(resp_f.salary);\r",
							"});\r",
							"\r",
							"console.log (resp_f)\r",
							"\r",
							"\r",
							"pm.test(\"family property\", function () {  \r",
							"    pm.expect(resp_f.family.pets.dog).to.have.property(\"name\");\r",
							"});\r",
							"\r",
							"pm.test(\"dog age expect\", function () {  \r",
							"    pm.expect(resp_f.family.pets.dog).to.have.property(\"age\");\r",
							"});\r",
							"\r",
							"pm.test(\"dog name\", function () {  \r",
							"    pm.expect(resp_f.family.pets.dog.name).to.eql(\"Luky\");\r",
							"});\r",
							"\r",
							"pm.test(\"dog age\", function () {  \r",
							"    pm.expect(+resp_f.family.pets.dog.age).to.eql(4);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": []
				},
				"url": {
					"raw": "http://162.55.220.72:5005/object_info_3?name=Maksym&age=29&salary=300",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"object_info_3"
					],
					"query": [
						{
							"key": "name",
							"value": "Maksym"
						},
						{
							"key": "age",
							"value": "29"
						},
						{
							"key": "salary",
							"value": "300"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "object_info_4",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//2. Статус код 200\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"//3. Спарсить response body в json.\r",
							"let resp_f = pm.response.json();\r",
							"console.log(resp_f)\r",
							"\r",
							"//4. Спарсить request.\r",
							"let req_f = pm.request.toJSON();\r",
							"console.log(req_f)\r",
							"\r",
							"//5. Проверить, что name в ответе равно name s request (name забрать из request.)\r",
							"let req_name = pm.request.url.query.one(\"name\")\r",
							"console.log(req_name)\r",
							"\r",
							"pm.test(\"Сравнение name\", function () {\r",
							"    pm.expect(req_name.value).to.eql(resp_f.name);\r",
							"});\r",
							"\r",
							"//6. Проверить, что age в ответе равно age из request (age забрать из request.)\r",
							"let req_age = pm.request.url.query.one(\"age\")\r",
							"console.log(req_age)\r",
							"\r",
							"pm.test(\"Сравнение age\", function () {\r",
							"    pm.expect(+req_age.value).to.eql(+resp_f.age);\r",
							"});\r",
							"\r",
							"\r",
							"let req_salary = pm.request.url.query.one(\"salary\")\r",
							"\r",
							"//7. Вывести в консоль параметр salary из request.\r",
							"console.log(req_salary.value)\r",
							"\r",
							"//8. Вывести в консоль параметр salary из response.\r",
							"console.log(resp_f.salary)\r",
							"\r",
							"//9. Вывести в консоль 0-й элемент параметра salary из response.\r",
							"//10. Вывести в консоль 1-й элемент параметра salary параметр salary из response.\r",
							"//11. Вывести в консоль 2-й элемент параметра salary параметр salary из response.\r",
							"console.log(+resp_f.salary[0])\r",
							"console.log(+resp_f.salary[1])\r",
							"console.log(+resp_f.salary[2])\r",
							"\r",
							"//12. Проверить, что 0-й элемент параметра salary равен salary из request (salary забрать из request.)\r",
							"pm.test(\"Сравнение 0\", function () {\r",
							"    pm.expect(+req_salary.value).to.eql(+resp_f.salary[0]);\r",
							"});\r",
							"\r",
							"//13. Проверить, что 1-й элемент параметра salary равен salary*2 из request (salary забрать из request.)\r",
							"pm.test(\"Сравнение 1\", function () {\r",
							"    pm.expect(+req_salary.value*2).to.eql(+resp_f.salary[1]);\r",
							"});\r",
							"\r",
							"//14. Проверить, что 2-й элемент параметра salary равен salary*3 из request (salary забрать из request.)\r",
							"pm.test(\"Сравнение 2\", function () {\r",
							"    pm.expect(+req_salary.value*3).to.eql(+resp_f.salary[2]);\r",
							"});\r",
							"\r",
							"//15. Создать в окружении переменную name\r",
							"//16. Создать в окружении переменную age\r",
							"//17. Создать в окружении переменную salary\r",
							"pm.environment.set(\"name\", \"Maksym\");\r",
							"pm.environment.set(\"age\", 29);\r",
							"pm.environment.set(\"salary\", 300);\r",
							"\r",
							"//21. Написать цикл который выведет в консоль по порядку элементы списка из параметра salary.\r",
							"let i = 0\r",
							"while (i < 3)\r",
							"{\r",
							"    console.log(+resp_f.salary[i])\r",
							"    i = i+1\r",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": []
				},
				"url": {
					"raw": "{{ip_port}}/object_info_4?name={{name}}&age={{age}}&salary={{salary}}",
					"host": [
						"{{ip_port}}"
					],
					"path": [
						"object_info_4"
					],
					"query": [
						{
							"key": "name",
							"value": "{{name}}"
						},
						{
							"key": "age",
							"value": "{{age}}"
						},
						{
							"key": "salary",
							"value": "{{salary}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "user_info_2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//5. Статус код 200\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"//6. Спарсить response body в json.\r",
							"let resp_f = pm.response.json();\r",
							"console.log(resp_f)\r",
							"\r",
							"//7. Спарсить request.\r",
							"let req_f = pm.request.toJSON();\r",
							"console.log(req_f)\r",
							"\r",
							"//8. Проверить, что json response имеет параметр start_qa_salary\r",
							"pm.test(\"start_qa_salary\", function () {\r",
							"    pm.expect(resp_f).to.have.property(\"start_qa_salary\");\r",
							"});\r",
							"\r",
							"//9. Проверить, что json response имеет параметр qa_salary_after_6_months\r",
							"pm.test(\"qa_salary_after_6_months\", function () {\r",
							"    pm.expect(resp_f).to.have.property(\"qa_salary_after_6_months\");\r",
							"});\r",
							"\r",
							"//10. Проверить, что json response имеет параметр qa_salary_after_12_months\r",
							"pm.test(\"qa_salary_after_12_months\", function () {\r",
							"    pm.expect(resp_f).to.have.property(\"qa_salary_after_12_months\");\r",
							"});\r",
							"\r",
							"//11. Проверить, что json response имеет параметр qa_salary_after_3.5_year\r",
							"pm.test(\"qa_salary_after_3.5_years\", function () {\r",
							"    pm.expect(resp_f).to.have.property(\"qa_salary_after_3.5_years\");\r",
							"});\r",
							"\r",
							"//12. Проверить, что json response имеет параметр qa_salary_after_1.5_years\r",
							"pm.test(\"qa_salary_after_1.5_year\", function () {\r",
							"    pm.expect(resp_f).to.have.property(\"qa_salary_after_1.5_year\");\r",
							"});\r",
							"\r",
							"//13. Проверить, что json response имеет параметр person\r",
							"pm.test(\"person\", function () {\r",
							"    pm.expect(resp_f).to.have.property(\"person\");\r",
							"});\r",
							"\r",
							"//14. Проверить, что параметр start_qa_salary равен salary из request (salary забрать из request.)\r",
							"pm.test(\"start_qa_salary\", function () {\r",
							"    pm.expect(+pm.request.url.query.one(\"salary\").value).to.eql(+resp_f.start_qa_salary);\r",
							"});\r",
							"\r",
							"//15. Проверить, что параметр qa_salary_after_6_months равен salary*2 из request (salary забрать из request.)\r",
							"pm.test(\"qa_salary_after_6_months\", function () {\r",
							"    pm.expect(+pm.request.url.query.one(\"salary\").value*2).to.eql(+resp_f.qa_salary_after_6_months);\r",
							"});\r",
							"\r",
							"//16. Проверить, что параметр qa_salary_after_12_months равен salary*2.7 из request (salary забрать из request.)\r",
							"pm.test(\"qa_salary_after_12_months\", function () {\r",
							"    pm.expect(+pm.request.url.query.one(\"salary\").value*2.7).to.eql(+resp_f.qa_salary_after_12_months);\r",
							"});\r",
							"\r",
							"//17. Проверить, что параметр qa_salary_after_1.5_year равен salary*3.3 из request (salary забрать из request.)\r",
							"pm.test(\"qa_salary_after_1.5_year\", function () {\r",
							"    pm.expect(+pm.request.url.query.one(\"salary\").value*3.3).to.eql(+resp_f['qa_salary_after_1.5_year']);\r",
							"});\r",
							"\r",
							"//18. Проверить, что параметр qa_salary_after_3.5_years равен salary*3.8 из request (salary забрать из request.)\r",
							"pm.test(\"qa_salary_after_3.5_years\", function () {\r",
							"    pm.expect(+pm.request.url.query.one(\"salary\").value*3.8).to.eql(+resp_f['qa_salary_after_3.5_years']);\r",
							"});\r",
							"\r",
							"//19. Проверить, что в параметре person, 1-й элемент из u_name равен salary из request (salary забрать из request.)\r",
							"pm.test(\"u_name\", function () {\r",
							"    pm.expect(+resp_f.person.u_name[0]).to.eql(+req_f.salary);\r",
							"});\r",
							"\r",
							"//20. Проверить, что что параметр u_age равен age из request (age забрать из request.)\r",
							"pm.test(\"u_age\", function () {\r",
							"    pm.expect(+resp_f.person.u_age).to.eql(29);\r",
							"});\r",
							"\r",
							"//21. Проверить, что параметр u_salary_5_years равен salary*4.2 из request (salary забрать из request.)\r",
							"pm.test(\"u_salary_5_years\", function () {\r",
							"    pm.expect(+resp_f.person.salry*4.2).to.eql(+req_f.u_salary_5_years);\r",
							"});\r",
							"\r",
							"//22. ***Написать цикл который выведет в консоль по порядку элементы списка из параметра person.\r",
							"for (key in resp_f.person) {\r",
							"    console.log(key, resp_f.person[key]);\r",
							"};\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"strictSSL": false,
				"followAuthorizationHeader": false,
				"insecureHTTPParser": false,
				"removeRefererHeaderOnRedirect": false,
				"followRedirects": true
			},
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "{{name}}",
							"type": "text"
						},
						{
							"key": "age",
							"value": "{{age}}",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "{{salary}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "162.55.220.72:5006/user_info_2?name={{name}}&age={{age}}&salary={{salary}}",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5006",
					"path": [
						"user_info_2"
					],
					"query": [
						{
							"key": "name",
							"value": "{{name}}"
						},
						{
							"key": "age",
							"value": "{{age}}"
						},
						{
							"key": "salary",
							"value": "{{salary}}"
						}
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}